---
import ProgramAccordion from './ProgramAccordion.astro';
import type { Program, StudyPlanSummary } from '../types';
import { api } from '../utils/api';

const { programs } = Astro.props;

const allStudyPlans: StudyPlanSummary[] = await api<StudyPlanSummary[]>('/study-plans');
const availableStudyPlans = allStudyPlans.filter(studyPlan => studyPlan.status !== 'NEW' && studyPlan.archivedAt === null);
---

<button id="open-programs-dialog"
        class="select-none flex items-center justify-center gap-3 p-4 w-full md:w-fit px-6 border rounded-xl
               hover:bg-blue-50 hover:border-blue-200 hover:drop-shadow-md
               active:bg-blue-100 transition-all duration-200">
  <i data-lucide="library-big" class="text-blue-600" />
  <p class="font-semibold text-nowrap mb-0.5">All Programs</p>
</button>

<dialog id="programs-dialog"
        class="w-full max-w-2xl p-0 rounded-2xl shadow-2xl backdrop:bg-gray-950/20
               opacity-0 scale-95 transition-all duration-200">
  <div class="relative">
    <button id="close-programs-dialog"
            class="z-20 absolute top-3 right-3 p-1.5 hover:bg-gray-100 rounded-full mb-auto transition-all text-gray-600
                               hover:text-gray-700 active:bg-gray-200">
      <i data-lucide="x" class="size-5" />
    </button>

    <header class="sticky top-0 bg-white/80 backdrop-blur-sm">
      <div class="relative">
        <i data-lucide="search" class="absolute left-4 top-1/2 -translate-y-1/2 size-5 text-gray-400" />
        <input type="text"
               id="program-search"
               placeholder="Search a program..."
               autocomplete="off"
               class="w-full px-12 py-4 border-b bg-gray-50 focus:outline-none">
      </div>
    </header>

    <!-- Programs List -->
    <div class="divide-y divide-gray-200 max-h-[60vh] overflow-y-auto overscroll-contain">
      {programs.map((program: Program) => (
        <div class="program-item">
          <ProgramAccordion
            {...program}
            studyPlans={availableStudyPlans.filter(sp => sp.program === program.id)}
          />
        </div>
      ))}
      <div id="no-results-message" class="hidden p-6 text-center text-gray-400">No results.</div>
    </div>
  </div>
</dialog>

<style>
  dialog::backdrop {
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(4px);
  }
</style>

<script>
  const dialog = document.getElementById('programs-dialog') as HTMLDialogElement;
  const openButton = document.getElementById('open-programs-dialog');
  const closeButton = dialog.querySelector('#close-programs-dialog');
  const searchInput = dialog.querySelector('#program-search') as HTMLInputElement;
  const programs = dialog.querySelectorAll('.program-item');
  const noResultsMessage = dialog.querySelector('#no-results-message');

  openButton?.addEventListener('click', () => {
    dialog.showModal();

    requestAnimationFrame(() => {
      dialog.style.opacity = '1';
      dialog.style.transform = 'scale(1)';
    });
  });

  const closeDialog = () => {
    dialog.style.opacity = '0';
    dialog.style.transform = 'scale(95%)';
    setTimeout(() => dialog.close(), 200);
  };

  closeButton?.addEventListener('click', closeDialog);

  dialog.addEventListener('click', (e) => {
    if (e.target === dialog) closeDialog();
  });

  let debounceTimeout: number;

  searchInput?.addEventListener('input', (e) => {
    clearTimeout(debounceTimeout);

    debounceTimeout = setTimeout(() => {
      const query = (e.target as HTMLInputElement).value.toLowerCase();
      const queryWords = query.split(/\s+/);
      let totalQueryMatches = 0;

      programs.forEach(program => {
        const programText = program.textContent?.toLowerCase() || '';
        const isMatch = queryWords.every(word => programText.includes(word));
        if (isMatch) totalQueryMatches++;
        program.classList.toggle('hidden', !isMatch);
      });

      noResultsMessage?.classList.toggle('hidden', totalQueryMatches !== 0);
    }, 400);
  });

  dialog.addEventListener('cancel', (e) => {
    e.preventDefault();
    closeDialog();
  });
</script>
