name: Deploy Backend

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      path:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      vps_ip:
        required: true
        type: string
    secrets:
      ssh_key:
        required: true
      dockerhub_token:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ssh_key }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ inputs.vps_ip }} >> ~/.ssh/known_hosts

      - name: Login to Docker Hub (GitHub runner)
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.dockerhub_token }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: gjuplans/backend:${{ inputs.image_tag }}

      - name: Deploy on VPS
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.dockerhub_token }}
        run: |
          COMPOSE_PATH="${{ inputs.path }}/docker-compose.deploy.yaml"
          CADDYFILE_PATH="${{ inputs.path }}/Caddyfile"
          REMOTE_VPS="admin@${{ inputs.vps_ip }}"
          REMOTE_DIR="/opt/gjuplans"

          rsync -avz -e "ssh" $COMPOSE_PATH $REMOTE_VPS:$REMOTE_DIR/docker-compose.yaml
          rsync -avz -e "ssh" $CADDYFILE_PATH $REMOTE_VPS:$REMOTE_DIR/Caddyfile

          ssh $REMOTE_VPS << 'EOF'
            set -e
            cd /opt/gjuplans
          
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

            sudo docker compose -f $REMOTE_DIR/docker-compose.yaml pull
            sudo docker compose -f $REMOTE_DIR/docker-compose.yaml up -d
          EOF
