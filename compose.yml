services:
  cms:
    image: ${GHCR_NAMESPACE:ghcr.io/yousefalfoqaha/flowstruct}/cms:latest
    environment:
      RUNTIME_ENV_VAR_PREFIX: PREFIX_
      PREFIX_CONTENT_DOMAIN: ${DOMAIN}
      PREFIX_API_DOMAIN: api.${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(\"cms.${DOMAIN}\")"
      - "traefik.http.routers.cms.entrypoints=websecure"
      - "traefik.http.routers.cms.tls.certresolver=myresolver"
      - "traefik.http.services.cms.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: always

  content:
    image: ${GHCR_NAMESPACE:ghcr.io/yousefalfoqaha/flowstruct}/content:latest
    environment:
      RUNTIME_ENV_VAR_PREFIX: PREFIX_
      PREFIX_API_DOMAIN: api.${DOMAIN}
      PREFIX_API_KEY: ${API_KEY}
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.content.rule=Host(\"${DOMAIN}\")"
      - "traefik.http.routers.content.entrypoints=websecure"
      - "traefik.http.routers.content.tls.certresolver=myresolver"
      - "traefik.http.services.content.loadbalancer.server.port=80"
    restart: always

  api:
    image: ${GHCR_NAMESPACE:ghcr.io/yousefalfoqaha/flowstruct}/api:latest
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      API_KEY: ${API_KEY}
      SECURE: true
      CMS_DOMAIN: cms.${DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(\"api.${DOMAIN}\")"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
    networks:
      - api
    depends_on:
      - database
    restart: always

  database:
    image: postgres:16.9-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - api
    restart: always

  reverse-proxy:
    image: traefik:v3.5
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=gjuplans@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock"
    restart: always

networks:
  api:

volumes:
  pg_data:
  letsencrypt: