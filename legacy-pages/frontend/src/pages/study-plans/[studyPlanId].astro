---
import CourseDialog from "../../components/CourseDialog.astro";
import StudyPlanGrid from "../../components/StudyPlanGrid.astro";
import type {StudyPlanOption} from "../../types";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
    const studyPlans: StudyPlanOption[] = await fetch(`http://localhost:8080/api/v1/study-plans`)
        .then(res => res.json());

    return studyPlans.map(studyPlan => ({
        params: {studyPlanId: studyPlan.id.toString()}
    }));
}

const studyPlan = await fetch(`http://localhost:8080/api/v1/study-plans/${Astro.params.studyPlanId}`)
    .then(res => res.json());

const {
    program,
    courses,
    track,
    year,
    sections
} = studyPlan;
---

<Layout title={`${program.name} ${year}/${year + 1} ${track ? ` - ${track}` : ''} Study Plan`}>
    <div class="space-y-6 p-6 border min-h-screen">
        <section class="flex flex-col md:flex-row md:justify-between gap-4 md:items-center">
            <header class="space-y-2 text-center md:text-left">
                <h1 class="text-2xl font-bold">{program.degree}s in {program.name} ({program.code})</h1>
                <h2 class="opacity-60">
                    Study Plan {year} / {year + 1}
                    {track ? ` - ${track}` : ''}
                </h2>
            </header>

            <div class="flex text-sm justify-center md:justify-end gap-2 items-center flex-wrap-reverse select-none">
                <div class="flex items-center gap-3 p-2 px-3 size-fit cursor-pointer rounded-xl hover:bg-gray-100 transition-all">
                    <i data-lucide="list" class="size-4"/>
                    <p class="text-nowrap mb-0.5">Other Study Plans</p>
                </div>

                <a href="/" class="flex items-center gap-2 p-2 pr-3 size-fit rounded-xl hover:bg-gray-100 cursor-pointer transition-all">
                    <i data-lucide="chevron-left" class="size-4" />
                    <p class="text-nowrap mb-0.5">All Programs</p>
                </a>
            </div>
        </section>

        <StudyPlanGrid sections={sections} courses={courses} program={program}/>

        <div class="flex flex-col text-center text-sm space-y-2 w-full font-semibold">
            <h1>Click a course then scroll left/right to highlight its...</h1>
            <div class="flex gap-2 justify-center flex-wrap">
                <div class="p-1 px-3 pr-4 rounded bg-yellow-200 flex justify-between gap-1 items-center">
                    <i data-lucide="arrow-big-left-dash"/>
                    <p class="mb-0.5">Prerequisite Sequence</p>
                </div>
                <div class="p-1 px-3 pr-4 rounded bg-orange-300 flex justify-between gap-1 items-center">
                    <i data-lucide="arrow-big-left"/>
                    <p class="mb-0.5">Prerequisite</p>
                </div>
                <div class="p-1 px-3 pr-4 rounded bg-gray-400 text-white flex justify-between gap-1 items-center">
                    <i data-lucide="arrow-big-up"/>
                    <p class="mb-0.5">Corequisite</p>
                </div>
                <div class="p-1 px-3 pr-4 rounded bg-sky-800 text-white flex justify-between gap-1 items-center">
                    <i data-lucide="arrow-big-right-dash"/>
                    <p class="mb-0.5">Postrequisite Sequence</p>
                </div>
            </div>
        </div>
    </div>

    <CourseDialog/>
</Layout>

<script>
    import {
        createIcons,
        MoveRight,
        MoveLeft,
        Info,
        ChevronLast,
        ChevronFirst,
        ChevronDown,
        Search,
        X,
        ArrowBigRightDash,
        ArrowBigLeftDash,
        ArrowBigLeft,
        ArrowBigUp,
        ChevronLeft,
        List
    } from "lucide";

    createIcons({
        icons: {
            MoveRight,
            MoveLeft,
            Info,
            ChevronLast,
            ChevronFirst,
            ChevronDown,
            Search,
            X,
            ArrowBigRightDash,
            ArrowBigLeftDash,
            ArrowBigLeft,
            ArrowBigUp,
            ChevronLeft,
            List
        }
    });

    const url = window.location.pathname;
    const studyPlanId = url.split('/').pop();

    localStorage.setItem('lastVisited', JSON.stringify({
        id: studyPlanId,
        timestamp: new Date().toISOString()
    }));
</script>
