---
import type {Program, StudyPlanOption} from "../types";
import Layout from "../layouts/Layout.astro";
import ProgramAccordion from "../components/ProgramAccordion.astro";


const programs: Program[] = await fetch(`http://localhost:8080/api/v1/programs`)
    .then(res => res.json());


const studyPlans: StudyPlanOption[] = await fetch(`http://localhost:8080/api/v1/study-plans`)
    .then(res => res.json());
---

<Layout title="GJUPlans">
    <div class="flex flex-col gap-2 p-6 min-h-screen border justify-center items-center text-gray-800">
        <section class="flex flex-col gap-6 items-center">
            <header class="space-y-1 text-center">
                <h1 class="text-6xl font-bold">GJUPlans</h1>
                <h3 class="opacity-60">The GJU study plan visualizer</h3>
            </header>
            <button
                    id="open-programs-dialog"
                    class="flex items-center gap-2 p-2 border rounded w-fit px-3 pr-4 hover:bg-blue-100 hover:drop-shadow-md transition-all"
            >
                <i data-lucide="library-big"/>
                <p class="font-semibold text-nowrap mb-0.5">Browse Programs</p>
            </button>
        </section>
    </div>

    <dialog id="program-dialog" class="p-6 rounded-xl shadow-lg space-y-4">
        <div class="space-y-4 max-w-screen-sm">
            <header class="space-y-1 text-center sm:text-left">
                <h1 class="font-semibold text-lg">All GJU Programs</h1>
                <h3 class="text-xs opacity-60">Select a program from the list below to view its study plans</h3>
            </header>

            <div class="flex flex-col divide-y divide-gray-200 overflow-y-auto max-h-96 rounded">
                {programs.map(program => (
                        <ProgramAccordion
                            {...program}
                            studyPlans={studyPlans.filter(sp => sp.program === program.id)}
                        />
                ))}
            </div>
        </div>

        <button id="close-programs-dialog" class="select-none p-2 px-5 border rounded hover:bg-gray-100 transition-all">
            Close
        </button>
    </dialog>
</Layout>

<script>
    import {createIcons, LibraryBig, ChevronDown, ChevronLeft} from "lucide";

    createIcons({icons: {LibraryBig, ChevronDown, ChevronLeft}});

    const programsDialog = document.getElementById('program-dialog') as HTMLDialogElement;

    document.getElementById('open-programs-dialog')?.addEventListener('click', () => {
        programsDialog.showModal();
    });

    document.getElementById('close-programs-dialog')?.addEventListener('click', () => {
        programsDialog.close();
    });
</script>

