---
import type {Program, StudyPlanOption} from "../types";
import Layout from "../layouts/Layout.astro";
import ProgramAccordion from "../components/ProgramAccordion.astro";
import VisitedStudyPlanCard from "../components/VisitedStudyPlanCard.astro";
import {Image} from "astro:assets";
import GJULogo from "../public/GJULogo.png";

const programs: Program[] = await fetch(`http://localhost:8080/api/v1/programs`)
    .then(res => res.json());

const studyPlans: StudyPlanOption[] = await fetch(`http://localhost:8080/api/v1/study-plans`)
    .then(res => res.json());
---

<Layout title="GJUPlans">
    <div class="flex flex-col gap-6 p-6 min-h-screen border justify-center items-center text-gray-800">
        <Image src={GJULogo} alt="GJU logo" width={50} />

        <header class="space-y-1 text-center">
            <h1 class="text-8xl font-bold">GJUPlans</h1>
            <h3 class="">The GJU study plan visualizer</h3>
        </header>

        <button id="open-programs-dialog"
                class="select-none flex items-center gap-2 p-2 border rounded w-fit px-3 pr-4 hover:bg-blue-100 hover:drop-shadow-md transition-all"
        >
            <i data-lucide="library-big"/>
            <p class="font-semibold text-nowrap mb-0.5">Browse All Programs</p>
        </button>

        <section class="flex flex-col gap-2 justify-center items-center w-2/3 mx-auto">
            <div class="flex gap-2 opacity-60 items-center">
                <i data-lucide="history" class="size-4" />
                <h3 class="text-sm">Recently Visited</h3>
            </div>
            <div class="flex gap-2 items-stretch w-full relative">
                <button id="left-navigator"
                        class="hover:scale-125 transition-all p-2 flex items-center justify-center">
                    <i data-lucide="chevron-left" class="size-8" />
                </button>

                <div class="relative flex-1 overflow-hidden">
                    <div id="left-hidden-gradient"
                         class="absolute left-0 z-10 w-8 h-full bg-gradient-to-r from-white pointer-events-none"></div>

                    <div id="right-hidden-gradient"
                         class="absolute right-0 z-10 w-8 h-full bg-gradient-to-l from-white pointer-events-none"></div>

                        <div id="previously-visited" class="flex gap-2 overflow-x-auto w-full">
                        <VisitedStudyPlanCard programName="Computer Science" {...studyPlans[0]}/>

                        <VisitedStudyPlanCard programName="Mechanical and Maintenance Engineering"
                                              id={2} year={2022} track="Thermal Systems Track"/>

                        <VisitedStudyPlanCard programName="Business Intelligence and Data Analytics"
                                              id={3} year={2024}/>

                        <VisitedStudyPlanCard programName="Business Intelligence and Data Analytics"
                                              id={3} year={2024}/>

                        <VisitedStudyPlanCard programName="Business Intelligence and Data Analytics"
                                              id={3} year={2024}/>

                        <VisitedStudyPlanCard programName="Business Intelligence and Data Analytics"
                                              id={3} year={2024}/>

                        <VisitedStudyPlanCard programName="Business Intelligence and Data Analytics"
                                              id={3} year={2024}/>
                    </div>
                </div>

                <button id="right-navigator"
                        class="hover:scale-125 transition-all p-2 flex items-center justify-center">
                    <i data-lucide="chevron-right" class="size-8" />
                </button>
            </div>
        </section>
    </div>

    <dialog id="program-dialog" class="p-6 rounded-xl shadow-lg space-y-4">
        <div class="space-y-4 max-w-screen-sm">
            <header class="space-y-1 text-center sm:text-left">
                <h1 class="font-semibold text-lg">All GJU Programs</h1>
                <h3 class="text-xs opacity-60">Select a program from the list below to view its study plans</h3>
            </header>

            <div class="flex flex-col divide-y divide-gray-200 overflow-y-auto max-h-96 rounded">
                {programs.map(program => (
                        <ProgramAccordion
                            {...program}
                            studyPlans={studyPlans.filter(sp => sp.program === program.id)}
                        />
                ))}
            </div>
        </div>

        <button id="close-programs-dialog" class="select-none p-2 px-5 border rounded hover:bg-gray-100 transition-all">
            Close
        </button>
    </dialog>
</Layout>

<style>
    #previously-visited {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }

    #previously-visited::-webkit-scrollbar {
        display: none;
    }
</style>


<script>
    import {createIcons, LibraryBig, ChevronDown, ChevronLeft, ArrowRight, ChevronRight, History} from "lucide";

    createIcons({icons: {LibraryBig, ChevronDown, ChevronLeft, ArrowRight, ChevronRight, History}});

    const programsDialog = document.getElementById('program-dialog') as HTMLDialogElement;

    document.getElementById('open-programs-dialog')?.addEventListener('click', () => {
        programsDialog.showModal();
    });

    document.getElementById('close-programs-dialog')?.addEventListener('click', () => {
        programsDialog.close();
    });

    const previouslyVisited = document.getElementById("previously-visited");
    const leftNavigator = document.getElementById('left-navigator');
    const rightNavigator = document.getElementById('right-navigator');
    const leftHiddenGradient = document.getElementById('left-hidden-gradient');
    const rightHiddenGradient = document.getElementById('right-hidden-gradient');

    function updateHiddenGradients() {
        if (!previouslyVisited ||
            !leftNavigator ||
            !rightNavigator ||
            !leftHiddenGradient ||
            !rightHiddenGradient
        ) return;

        const hiddenLeft = previouslyVisited.scrollLeft;
        const hiddenRight = previouslyVisited.scrollWidth - previouslyVisited.clientWidth - previouslyVisited.scrollLeft;

        leftNavigator.classList.toggle('invisible', hiddenLeft <= 0);
        rightNavigator.classList.toggle('invisible', hiddenRight <= 0);

        leftHiddenGradient.style.display = hiddenLeft <= 0 ? 'none' : 'flex';
        rightHiddenGradient.style.display = hiddenRight <= 0 ? 'none' : 'flex';
    }


    leftNavigator?.addEventListener('click', () => {
        if (!previouslyVisited) return;
        previouslyVisited.scrollBy({
            left: -previouslyVisited.clientWidth * 0.6,
            behavior: 'smooth'
        });
    });

    rightNavigator?.addEventListener('click', () => {
        if (!previouslyVisited) return;
        previouslyVisited.scrollBy({
            left: previouslyVisited.clientWidth * 0.6,
            behavior: 'smooth'
        });
    });

    const resizeObserver = new ResizeObserver(() => updateHiddenGradients);

    if (previouslyVisited) {
        resizeObserver.observe(previouslyVisited);
        previouslyVisited.addEventListener('scroll', updateHiddenGradients);
    }

    updateHiddenGradients();
</script>

